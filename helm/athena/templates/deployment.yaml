apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
spec:
  replicas: 2
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      name: {{ .Values.name }}
      labels:
        app: {{ .Values.name }}
    spec:
      volumes:
      - name: athena-configmap
        configMap:
          name: athena-configmap
          items:
          - key: config.yaml
            path: config.yaml
      securityContext:
        runAsUser: 1000
      containers:
      - name: {{ .Values.image.name }}
        image: "quay.io/giantswarm/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        args:
        - "daemon"
        - "--config-dir=/var/run/athena/configmap/"
        - "--config-file=config"
        ports:
        - containerPort: 8000
          name: http
        resources:
          requests:
            cpu: 100m
            memory: 30Mi
          limits:
            cpu: 250m
            memory: 250Mi
        volumeMounts:
        - name: athena-configmap
          mountPath: /var/run/athena/configmap/
        readOnly: true
        livenessProbe:
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: /
            port: 8000
            scheme: HTTP
          initialDelaySeconds: 30
          timeoutSeconds: 1
      imagePullSecrets:
      - name: athena-pull-secret
      serviceAccount: {{ .Values.name }}
      serviceAccountName: {{ .Values.name }}
